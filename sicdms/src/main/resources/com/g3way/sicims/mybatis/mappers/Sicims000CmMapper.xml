<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.g3way.sicims.mybatis.mappers.Sicims000CmMapper">

	<!--
	================================
	  0. 공통정보
	================================
	 -->
	<!-- 시스템의 년도를 조회한다.  -->
	<select id="getCmnnYear" parameterType="hashmap" resultType="string">
		SELECT	to_char(sysdate, 'yyyy') as "year"
		FROM	DUAL
	</select>


	<!--
	================================
	  1. 공통코드 관리
	================================
	 -->
	<!-- 공통코드 Result Map -->
	<resultMap id="cmCodeResultMap" type="com.g3way.sicims.services.sicims000Cm.vo.CmCodeVo" >
		<result column="cmcd_ty" 		property="cmcdTy" 			jdbcType="VARCHAR"/>
		<result column="cmcd_se" 		property="cmcdSe" 			jdbcType="VARCHAR"/>
		<result column="cmcd_cd" 		property="cmcdCd" 			jdbcType="VARCHAR"/>
		<result column="cmcd_nm" 		property="cmcdNm" 			jdbcType="VARCHAR"/>
		<result column="cmcd_expln" 	property="cmcdExpln" 		jdbcType="VARCHAR"/>
		<result column="cmcd_unit" 		property="cmcdUnit" 		jdbcType="VARCHAR"/>
		<result column="use_yn" 		property="useYn" 			jdbcType="CHAR"/>
		<result column="updt_ymd" 		property="updtYmd" 			jdbcType="CHAR"/>
		<result column="updusr_id" 		property="updusrId" 		jdbcType="VARCHAR"/>
		<result column="updusr_ip" 		property="updusrIp" 		jdbcType="VARCHAR"/>
		<result column="rmrk" 			property="rmrk" 			jdbcType="VARCHAR"/>
	</resultMap>

	<!--  공통코드 목록을 조회한다.  -->
	<select id="getCmCodeList" parameterType="hashmap" resultMap="cmCodeResultMap">
		SELECT
				  cmcd_ty			/* 공통코드유형 */
				, cmcd_se			/* 공통코드구분 */
				, cmcd_cd			/* 공통코드코드 */
				, cmcd_nm			/* 공통코드이름 */
				, cmcd_expln		/* 공통코드설명 */
				, cmcd_unit			/* 공통코드단위 */
				, use_yn			/* 사용여부 */
				, updt_ymd			/* 갱신일자 */
				, updusr_id			/* 갱신자ID */
				, updusr_ip			/* 갱신자IP */
				, rmrk				/* 비고 */
		FROM	CM_CODE_T
		WHERE	cmcd_ty = #{cmcdTy}
		<if test="cmcdSe != null and cmcdSe != '' ">
			AND cmcd_se = #{cmcdSe}
		</if>
			AND cmcd_cd != '00000'
			AND use_yn = 'Y'
		ORDER BY cmcd_se, cmcd_cd
	</select>



	<!--
	================================
	 2. 기관 목록 조회
	================================
	 -->
	<!-- 기관1 목록을 조회한다.  -->
	<select id="getInstCdList" parameterType="hashmap" resultType="String">
		SELECT 	inst_cd	  AS "instCd"
		FROM	CM_INST_T
		ORDER BY inst_cd
	</select>


	<!-- 기관1 목록을 조회한다.  -->
	<select id="getInst1CdList" parameterType="hashmap" resultType="hashmap">
		SELECT
				  cmcd_cd			AS "instCd"			/* 기관코드	*/
				, cmcd_nm			AS "instNm"			/* 기관명	*/
				, CASE 	WHEN cmcd_cd = '6110000' THEN 1
						ELSE 2
				  END 				AS sort_odr
		FROM	CM_CODE_T
		WHERE	cmcd_ty = 'CM'
			AND cmcd_se = '1001'
			AND cmcd_cd != '00000'
			AND use_yn = 'Y'
		ORDER BY sort_odr, cmcd_nm
	</select>

	<!-- 기관2 목록을 조회한다.  -->
	<select id="getInst2CdList" parameterType="hashmap" resultType="hashmap">
		SELECT
				  cmcd_cd			AS "instCd"			/* 기관코드	*/
				, cmcd_nm			AS "instNm"			/* 기관명	*/
		FROM	CM_CODE_T
		WHERE	cmcd_ty = 'CM'
			AND cmcd_se = '1002'
			AND SUBSTR(cmcd_cd, 1, 3) = SUBSTR( #{inst1Cd}, 1, 3)
			AND use_yn = 'Y'
		ORDER BY cmcd_nm
	</select>



	<!--
	================================
	  3. 공통파일 관리
	================================
	 -->

	<!-- 공통파일관리 -->
	<resultMap id="cmFileResultMap" type="com.g3way.sicims.services.sicims000Cm.vo.CmFileVo">
		<result column="file_id" 		property="fileId" 			jdbcType="DECIMAL" />
		<result column="file_kd" 		property="fileKd" 			jdbcType="VARCHAR" />
		<result column="file_nm" 		property="fileNm" 			jdbcType="VARCHAR" />
		<result column="file_orgnl_nm"	property="fileOrgnlNm" 		jdbcType="VARCHAR" />
		<result column="file_extn" 		property="fileExtn" 		jdbcType="VARCHAR" />
		<result column="file_path" 		property="filePath"			jdbcType="VARCHAR" />
		<result column="file_sz" 		property="fileSz"			jdbcType="DECIMAL" />
		<result column="rfrnc_id" 		property="rfrncId"			jdbcType="VARCHAR" />
		<result column="use_yn"			property="useYn"       		jdbcType="VARCHAR" />
		<result column="updt_ymd"		property="updtYmd"       	jdbcType="VARCHAR" />
		<result column="updusr_id"		property="updusrId"       	jdbcType="VARCHAR" />
		<result column="updusr_ip"		property="updusrIp"       	jdbcType="VARCHAR" />
		<result column="rmrk"			property="rmrk"       		jdbcType="VARCHAR" />
	</resultMap>


	<!-- 파일정보 조회 -->
	<select id="getCmFileInfo" parameterType="java.math.BigDecimal"  resultMap="cmFileResultMap">
		SELECT
				  file_id				/* 파일Id 	*/
				, file_kd				/* 파일종류 	*/
				, file_nm				/* 파일명 		*/
				, file_orgnl_nm			/* 원본파일명 	*/
				, file_extn				/* 파일확장자 	*/
				, file_path				/* 파일경로 	*/
				, file_sz 				/* 파일크기 	*/
				, rfrnc_id				/* 참조ID 	*/
				, use_yn				/* 사용여부 	*/
				, updt_ymd				/* 갱신일자 	*/
				, updusr_id				/* 갱신자ID 	*/
				, updusr_ip				/* 갱신자IP 	*/
				, rmrk					/* 비고 		*/
		FROM	CM_FILE_T
		WHERE	file_id = cast(#{fileId} AS DECIMAL)
	</select>


 	<!-- 파일정보를 등록한다. -->
	<insert id="insertCmFile" parameterType="com.g3way.sicims.services.sicims000Cm.vo.CmFileVo">
		<selectKey keyProperty="fileId" resultType="java.math.BigDecimal" order="BEFORE">
			SELECT CM_FILE_T_SQ.nextval FROM DUAL
		</selectKey>
		INSERT INTO CM_FILE_T (
			  file_id
			, file_kd
			, file_nm
			, file_orgnl_nm
			, file_extn
			, file_path
			, file_sz
			, rfrnc_id
			, updt_ymd
			, updusr_id
			, updusr_ip
			, rmrk
		) VALUES (
			  #{fileId,		jdbcType=DECIMAL}
			, #{fileKd,		jdbcType=VARCHAR}
	<choose>
		<when test="fileNm != null and fileNm != ''">
			, #{fileNm,		jdbcType=VARCHAR}		/* innorix 경우에만 : 2023-09-27*/
		</when>
		<otherwise>
			, TO_CHAR(SYSDATE,'YYYYMMDD') || '_' || #{fileId} || '.' || #{fileExtn}
		</otherwise>
	</choose>
			, #{fileOrgnlNm,jdbcType=VARCHAR}
			, #{fileExtn,	jdbcType=VARCHAR}
			, #{filePath,	jdbcType=VARCHAR}
			, #{fileSz,		jdbcType=DECIMAL}
			, #{rfrncId,	jdbcType=DECIMAL}
			, TO_CHAR(SYSDATE,'YYYYMMDD')
			, #{updusrId,	jdbcType=VARCHAR}
			, #{updusrIp,	jdbcType=VARCHAR}
			, #{rmrk,		jdbcType=VARCHAR}
		)
	</insert>

	<!-- 파일정보를 수정한다. -->
	<update id="updateCmFile" parameterType="com.g3way.sicims.services.sicims000Cm.vo.CmFileVo" >
		UPDATE CM_FILE_T
		SET 	  file_kd 		= #{fileKd,		jdbcType=VARCHAR}
				, file_nm 		= TO_CHAR(SYSDATE,'YYYYMMDD') || '_' || #{fileId} || '.' || #{fileExtn}
				, file_orgnl_nm	= #{fileOrgnlNm,jdbcType=VARCHAR}
				, file_extn		= #{fileExtn,	jdbcType=VARCHAR}
				, file_path		= #{filePath,	jdbcType=VARCHAR}
				, file_sz 		= #{fileSz,		jdbcType=DECIMAL}
				, rfrnc_id		= #{rfrncId,	jdbcType=DECIMAL}
				, updt_ymd		= TO_CHAR(SYSDATE,'YYYYMMDD')
				, updusr_id		= #{updusrId,	jdbcType=VARCHAR}
				, updusr_ip		= #{updusrIp,	jdbcType=VARCHAR}
				, rmrk			= #{rmrk,		jdbcType=VARCHAR}
		WHERE 	file_id 		= #{fileId,		jdbcType=DECIMAL}
	</update>


	<!--  파일정보를 삭제한다. -->
	<delete id="deleteCmFile" parameterType="java.math.BigDecimal" >
		DELETE
		FROM   CM_FILE_T
		WHERE  file_id = CAST(#{fileId} AS DECIMAL)
	</delete>



	<!--
	================================
	  99. 메타파일 정보 조회
	================================
	 -->

	<!-- 메타파일 정보를 조회한다.  -->
	<select id="getColumnMetaList" parameterType="hashmap" resultType="hashmap">
		SELECT	  uta.table_name		AS "tblNm"
				, utc.column_name		AS "colNm"
				, utc.data_type			AS "dataTy"
				, utc.data_length		AS "dataLn"
				, utc.data_precision	AS "dataPrcsn"
				, utc.data_scale		AS "dataScl"
				, utc.nullable			AS "nullYn"
				, utc.data_default		AS "dataDflt"
				, utc.column_id			AS "colId"
				, ucc.comments			AS "cmnt"
		FROM	USER_TABLES uta
		INNER	JOIN USER_TAB_COLUMNS  utc ON utc.table_name = uta.table_name
		INNER	JOIN USER_COL_COMMENTS ucc ON ucc.table_name = utc.table_name AND ucc.column_name = utc.column_name
		ORDER BY utc.table_name, utc.column_id
	</select>
</mapper>
